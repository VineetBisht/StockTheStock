package sample;
import java.sql.*;

public class ManageStockDB {
    private Connection con;
    int rows;
    int count =0;
    public ManageStockDB() {
        String username = "n01324490";
        String password = "oracle";
        String url = "jdbc:oracle:thin:@calvin.humber.ca:1521:grok";
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            this.con = DriverManager.getConnection(url, username, password);
            // check if "employee" table is there
            DatabaseMetaData dbm = con.getMetaData();
            ResultSet tables = dbm.getTables(null, null, "stock", null);
            if (!tables.next()) {
                PreparedStatement pStmt = null;
                String create = "CREATE TABLE stock(product_id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 320 PRIMARY KEY," +
                        "name VARCHAR2( 255 ) NOT NULL," +
                        "price NUMBER( 8, 2 )," +
                        "volume INTEGER," +
                        "distributor_id NUMBER)";
                pStmt = con.prepareStatement(create);
                pStmt.executeUpdate();
                System.out.println("Created new 'Stock' table successfully ");
            }

        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }



    public int addItem(ManageStock i){
        String addQuerry = "INSERT INTO stock (product_id, name, price, volume, distributor_id) VALUES (?, ?, ?, ?, ?)";

        try{
            //step1
            PreparedStatement pst = con.prepareStatement(addQuerry);
            //step 2
            pst.setInt(1, i.getProduct_id());
            pst.setString(2, i.getName());
            pst.setDouble(3, i.getPrice());
            pst.setInt(4, i.getVolume());
            pst.setInt(5, i.getDistributor_id());

            //step 3
            rows = pst.executeUpdate();
            return rows;

        }catch(SQLException e){
            System.err.println(e);
            return 0;
        }

    }

    public int delete(ManageStock i){
        String deleteQuerry = "DELETE FROM stock WHERE product_id = ?";

        try{
            PreparedStatement pst = con.prepareStatement(deleteQuerry);
            pst.setInt(1, i.getProduct_id());
            rows = pst.executeUpdate();
            return  rows;
        }catch(SQLException e){
            System.err.println(e);
            return 0;
        }
    }

    public void list(){
        String listQuerry = "SELECT * FROM stock";

    }


    public int update(ManageStock i){
        String updateQuerry = "UPDATE stock SET name = ?, price = ?, volume = ?, distributor_id = ?"
                + "WHERE product_id = ?";
        try{
            PreparedStatement pst = con.prepareStatement(updateQuerry);
            pst.setString(1, i.getName());
            pst.setDouble(2, i.getPrice());
            pst.setInt(3, i.getVolume());
            pst.setDouble(4, i.getDistributor_id());
            pst.setInt(5, i.getProduct_id());
            rows = pst.executeUpdate();
            return  rows;
        }catch(SQLException e){
            System.err.println(e);
            return 0;
        }
    }

    public int find(ManageStock i){
        String findQuerry = "SELECT * FROM stock WHERE product_id = ?";
        int flag = 0;
        try{
            PreparedStatement pst = con.prepareStatement(findQuerry);
            pst.setInt(1, i.getProduct_id());

            ResultSet rs2 = pst.executeQuery();
            if(rs2.next()){


                return 1;
            }else{
                System.out.println("\nThere is not such record with the provided Product ID");
                return 0;
            }

        }catch(SQLException e){
            System.err.println(e);
            return 0;
        }
    }

}

